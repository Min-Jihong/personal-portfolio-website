"use client"; import Image from "next/image"; import Link from "next/link"; import { Badge } from "@/components/ui/badge"; import { Button } from "@/components/ui/button"; import { Card, CardContent, CardDescription, CardFooter, CardHeader, CardTitle } from "@/components/ui/card"; import { Project } from "@/types/project"; interface ProjectCardProps { project: Project; } export function ProjectCard({ project }: ProjectCardProps) { return ( <Card className="flex flex-col overflow-hidden transition-all duration-300 hover:shadow-lg hover:scale-[1.02] h-full"> <div className="relative w-full h-48"> <Image src={project.image} alt={project.name} layout="fill" objectFit="cover" className="rounded-t-lg" /> </div> <CardHeader className="flex-grow"> <CardTitle className="text-xl font-bold text-gray-900 dark:text-gray-100">{project.name}</CardTitle> <CardDescription className="text-gray-600 dark:text-gray-400 line-clamp-3"> {project.description} </CardDescription> </CardHeader> <CardContent className="flex-grow-0"> <div className="flex flex-wrap gap-2"> {project.technologies.map((tech) => ( <Badge key={tech} variant="secondary" className="text-sm"> {tech} </Badge> ))} </div> </CardContent> <CardFooter className="flex flex-col sm:flex-row gap-2 mt-auto"> <Button asChild className="w-full"> <Link href={`/projects/${project.id}`}>상세 보기</Link> </Button> {project.githubUrl && ( <Button asChild variant="outline" className="w-full"> <a href={project.githubUrl} target="_blank" rel="noopener noreferrer"> GitHub </a> </Button> )} {project.liveUrl && ( <Button asChild variant="outline" className="w-full"> <a href={project.liveUrl} target="_blank" rel="noopener noreferrer"> 라이브 데모 </a> </Button> )} </CardFooter> </Card> ); }